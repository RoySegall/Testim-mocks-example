"use strict";(self.webpackChunktestim_mocks_examples=self.webpackChunktestim_mocks_examples||[]).push([[714],{4974:function(e,n,s){s.r(n),n.default="\nclass getJokeTest extends TestCase {\n\n  public function testGetJoke(): void {\n    $jsonContents = json_encode([\n      'body' => [[\n        'setup' => 'Why Was Six Afraid of Seven',\n        'punchline' => 'Because Seven ate Nine!',\n      ]]\n    ]);\n    $response = new Response(200, ['Content-Type' => 'application/json'],\n      $jsonContents\n    );\n\n    $clientMock = $this->getMockBuilder(Client::class)->getMock();\n    $clientMock->method('get')->willReturn($response);\n\n    $dadJokeService = new DadJokeService();\n    $dadJokeService->client = $clientMock;\n    $this->assertEquals(\n      $dadJokeService->getJoke(),\n      'Your dad joke is: Why Was Six Afraid of Seven - Because Seven ate Nine!'\n    );\n  }\n}\n"}}]);
//# sourceMappingURL=component---src-pages-get-joke-mock-php-js-8d650d2512f629619c3d.js.map